{"version":3,"file":"index.modern.js","sources":["../src/index.js"],"sourcesContent":["import React, { useState } from 'react'\nimport styles from './styles.module.css'\n\nexport default function EmployeesTable({ data, columns }) {\n  const [currentPage, setCurrentPage] = useState(1)\n  const [entriesDisplayed, setEntriesDisplayed] = useState(10)\n  const [displayedData, setDisplayedData] = useState(data)\n  const totalEntries = displayedData.length\n  const totalPages = Math.ceil(totalEntries / entriesDisplayed)\n\n  const createDataChunks = (chunkSize) => {\n    const chunkList = []\n    const datas = displayedData.slice()\n    while (datas.length) {\n      chunkList.push(datas.splice(0, chunkSize))\n    }\n    return chunkList\n  }\n\n  const onEntriesDisplayedChange = (e) => {\n    setEntriesDisplayed(e.target.value)\n    setCurrentPage(1)\n  }\n\n  const previousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1)\n    }\n  }\n\n  const nextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1)\n    }\n  }\n\n  const handleSearchChange = (e) => {\n    const datas = data\n      .slice()\n      .filter((employee) =>\n        employee.firstname.toLowerCase().includes(e.target.value.toLowerCase())\n      )\n    setDisplayedData(datas)\n    setCurrentPage(1)\n    console.log(currentPage)\n  }\n\n  return (\n    <div>\n      <div className={styles.controlsContainer}>\n        <select onChange={onEntriesDisplayedChange} value={entriesDisplayed}>\n          <option value={1}>1</option>\n          <option value={2}>2</option>\n          <option value={10}>10</option>\n          <option value={25}>25</option>\n          <option value={50}>50</option>\n          <option value={100}>100</option>\n        </select>\n      </div>\n      <input type='text' placeholder='Search' onChange={handleSearchChange} />\n      <table>\n        <thead>\n          <tr>\n            {columns.map((column) => (\n              <th key={column.accessor}>{column.Header}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {displayedData.length > 0 ? (\n            createDataChunks(entriesDisplayed)[currentPage - 1].map(\n              (row, idx) => (\n                <tr key={idx}>\n                  {Object.values(row).map((cell, idx) => (\n                    <td key={idx}>{cell}</td>\n                  ))}\n                </tr>\n              )\n            )\n          ) : (\n            <tr>\n              <td>No matching records found</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <div>\n        <button onClick={previousPage}>Previous</button>\n        <button onClick={nextPage}>Next</button>\n      </div>\n      <div>{`Page ${currentPage} of ${totalPages} (${totalEntries} entries)`}</div>\n    </div>\n  )\n}\n"],"names":["EmployeesTable","data","columns","currentPage","setCurrentPage","useState","entriesDisplayed","setEntriesDisplayed","displayedData","setDisplayedData","totalEntries","length","totalPages","Math","ceil","createDataChunks","chunkSize","chunkList","datas","slice","push","splice","onEntriesDisplayedChange","e","target","value","previousPage","nextPage","handleSearchChange","filter","employee","firstname","toLowerCase","includes","console","log","styles","controlsContainer","map","column","accessor","Header","row","idx","Object","values","cell"],"mappings":";;;;AAGe,SAASA,cAAT,CAAwB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAxB,EAA2C;AACxD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCC,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CF,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCJ,QAAQ,CAACJ,IAAD,CAAlD;AACA,QAAMS,YAAY,GAAGF,aAAa,CAACG,MAAnC;AACA,QAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUJ,YAAY,GAAGJ,gBAAzB,CAAnB;;AAEA,QAAMS,gBAAgB,GAAIC,SAAD,IAAe;AACtC,UAAMC,SAAS,GAAG,EAAlB;AACA,UAAMC,KAAK,GAAGV,aAAa,CAACW,KAAd,EAAd;;AACA,WAAOD,KAAK,CAACP,MAAb,EAAqB;AACnBM,MAAAA,SAAS,CAACG,IAAV,CAAeF,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgBL,SAAhB,CAAf;AACD;;AACD,WAAOC,SAAP;AACD,GAPD;;AASA,QAAMK,wBAAwB,GAAIC,CAAD,IAAO;AACtChB,IAAAA,mBAAmB,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnB;AACArB,IAAAA,cAAc,CAAC,CAAD,CAAd;AACD,GAHD;;AAKA,QAAMsB,YAAY,GAAG,MAAM;AACzB,QAAIvB,WAAW,GAAG,CAAlB,EAAqB;AACnBC,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACD;AACF,GAJD;;AAMA,QAAMwB,QAAQ,GAAG,MAAM;AACrB,QAAIxB,WAAW,GAAGS,UAAlB,EAA8B;AAC5BR,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACD;AACF,GAJD;;AAMA,QAAMyB,kBAAkB,GAAIL,CAAD,IAAO;AAChC,UAAML,KAAK,GAAGjB,IAAI,CACfkB,KADW,GAEXU,MAFW,CAEHC,QAAD,IACNA,QAAQ,CAACC,SAAT,CAAmBC,WAAnB,GAAiCC,QAAjC,CAA0CV,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeO,WAAf,EAA1C,CAHU,CAAd;AAKAvB,IAAAA,gBAAgB,CAACS,KAAD,CAAhB;AACAd,IAAAA,cAAc,CAAC,CAAD,CAAd;AACA8B,IAAAA,OAAO,CAACC,GAAR,CAAYhC,WAAZ;AACD,GATD;;AAWA,sBACE,8CACE;AAAK,IAAA,SAAS,EAAEiC,MAAM,CAACC;AAAvB,kBACE;AAAQ,IAAA,QAAQ,EAAEf,wBAAlB;AAA4C,IAAA,KAAK,EAAEhB;AAAnD,kBACE;AAAQ,IAAA,KAAK,EAAE;AAAf,SADF,eAEE;AAAQ,IAAA,KAAK,EAAE;AAAf,SAFF,eAGE;AAAQ,IAAA,KAAK,EAAE;AAAf,UAHF,eAIE;AAAQ,IAAA,KAAK,EAAE;AAAf,UAJF,eAKE;AAAQ,IAAA,KAAK,EAAE;AAAf,UALF,eAME;AAAQ,IAAA,KAAK,EAAE;AAAf,WANF,CADF,CADF,eAWE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,QAA/B;AAAwC,IAAA,QAAQ,EAAEsB;AAAlD,IAXF,eAYE,gDACE,gDACE,gCACG1B,OAAO,CAACoC,GAAR,CAAaC,MAAD,iBACX;AAAI,IAAA,GAAG,EAAEA,MAAM,CAACC;AAAhB,KAA2BD,MAAM,CAACE,MAAlC,CADD,CADH,CADF,CADF,eAQE,mCACGjC,aAAa,CAACG,MAAd,GAAuB,CAAvB,GACCI,gBAAgB,CAACT,gBAAD,CAAhB,CAAmCH,WAAW,GAAG,CAAjD,EAAoDmC,GAApD,CACE,CAACI,GAAD,EAAMC,GAAN,kBACE;AAAI,IAAA,GAAG,EAAEA;AAAT,KACGC,MAAM,CAACC,MAAP,CAAcH,GAAd,EAAmBJ,GAAnB,CAAuB,CAACQ,IAAD,EAAOH,GAAP,kBACtB;AAAI,IAAA,GAAG,EAAEA;AAAT,KAAeG,IAAf,CADD,CADH,CAFJ,CADD,gBAWC,6CACE,4DADF,CAZJ,CARF,CAZF,eAsCE,8CACE;AAAQ,IAAA,OAAO,EAAEpB;AAAjB,gBADF,eAEE;AAAQ,IAAA,OAAO,EAAEC;AAAjB,YAFF,CAtCF,eA0CE,iCAAO,QAAOxB,WAAY,OAAMS,UAAW,KAAIF,YAAa,WAA5D,CA1CF,CADF;AA8CD;;;;"}