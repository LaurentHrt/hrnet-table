{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import React, { useState } from 'react'\nimport styles from './styles.module.css'\n\nexport default function EmployeesTable({ data, columns }) {\n  const [currentPage, setCurrentPage] = useState(1)\n  const [entriesDisplayed, setEntriesDisplayed] = useState(10)\n  const [displayedData, setDisplayedData] = useState(data)\n  const totalEntries = displayedData.length\n  const totalPages = Math.ceil(totalEntries / entriesDisplayed)\n  const showingFirst = currentPage * entriesDisplayed - entriesDisplayed + 1\n  const showingLast =\n    showingFirst + parseInt(entriesDisplayed - 1) > totalEntries\n      ? totalEntries\n      : showingFirst + parseInt(entriesDisplayed - 1)\n\n  const createDataChunks = (chunkSize) => {\n    const chunkList = []\n    const datas = displayedData.slice()\n    while (datas.length) {\n      chunkList.push(datas.splice(0, chunkSize))\n    }\n    return chunkList\n  }\n\n  const onEntriesDisplayedChange = (e) => {\n    setEntriesDisplayed(e.target.value)\n    setCurrentPage(1)\n  }\n\n  const previousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1)\n    }\n  }\n\n  const nextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1)\n    }\n  }\n\n  const handleSearchChange = (e) => {\n    const datas = data\n      .slice()\n      .filter(\n        (employee) =>\n          employee.firstname\n            .toLowerCase()\n            .includes(e.target.value.toLowerCase()) ||\n          employee.lastname\n            .toLowerCase()\n            .includes(e.target.value.toLowerCase()) ||\n          employee.dateOfBirth\n            .toLowerCase()\n            .includes(e.target.value.toLowerCase()) ||\n          employee.startDate\n            .toLowerCase()\n            .includes(e.target.value.toLowerCase()) ||\n          employee.street\n            .toLowerCase()\n            .includes(e.target.value.toLowerCase()) ||\n          employee.city.toLowerCase().includes(e.target.value.toLowerCase()) ||\n          employee.state.toLowerCase().includes(e.target.value.toLowerCase()) ||\n          employee.zip\n            .toString()\n            .toLowerCase()\n            .includes(e.target.value.toLowerCase()) ||\n          employee.department\n            .toLowerCase()\n            .includes(e.target.value.toLowerCase())\n      )\n    setDisplayedData(datas)\n    setCurrentPage(1)\n  }\n\n  const createPaginationButtons = (pageNumber) => {\n    const buttons = []\n    for (let i = 1; i <= totalPages; i++) {\n      buttons.push(\n        <button\n          disabled={currentPage === i ? true : undefined}\n          onClick={() => setCurrentPage(i)}\n        >\n          {i}\n        </button>\n      )\n    }\n    return buttons\n  }\n\n  const disablePreviousButton =\n    totalPages <= 1 || currentPage <= 1 ? true : undefined\n  const disableNextButton =\n    totalPages <= 1 || currentPage >= totalPages ? true : undefined\n\n  return (\n    <div>\n      <div className={styles.controlsBar}>\n        <div>\n          <label>\n            Show\n            <select\n              onChange={onEntriesDisplayedChange}\n              value={entriesDisplayed}\n            >\n              <option value={1}>1</option>\n              <option value={2}>2</option>\n              <option value={10}>10</option>\n              <option value={25}>25</option>\n              <option value={50}>50</option>\n              <option value={100}>100</option>\n            </select>\n            entries\n          </label>\n        </div>\n        <div>\n          <label>\n            Search:\n            <input\n              type='text'\n              placeholder='Search'\n              onChange={handleSearchChange}\n            />\n          </label>\n        </div>\n      </div>\n      <table className={styles.table}>\n        <thead>\n          <tr>\n            {columns.map((column) => (\n              <th\n                className={styles.th}\n                key={column.accessor}\n                value={column.accessor}\n              >\n                {column.Header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {displayedData.length > 0 ? (\n            createDataChunks(entriesDisplayed)[currentPage - 1].map(\n              (row, idx) => (\n                <tr className={styles.tr} key={idx}>\n                  {Object.values(row).map((cell, idx) => (\n                    <td className={styles.td} key={idx}>\n                      {cell}\n                    </td>\n                  ))}\n                </tr>\n              )\n            )\n          ) : (\n            <tr>\n              <td>No matching records found</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <div className={styles.paginationContainer}>\n        <div>{`Showing ${showingFirst} to ${showingLast} of ${totalEntries} entries`}</div>\n        <div>\n          <button disabled={disablePreviousButton} onClick={previousPage}>\n            Previous\n          </button>\n          {}\n          {createPaginationButtons(totalPages)}\n          <button disabled={disableNextButton} onClick={nextPage}>\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":["EmployeesTable","data","columns","useState","currentPage","setCurrentPage","entriesDisplayed","setEntriesDisplayed","displayedData","setDisplayedData","totalEntries","length","totalPages","Math","ceil","showingFirst","showingLast","parseInt","createDataChunks","chunkSize","chunkList","datas","slice","push","splice","onEntriesDisplayedChange","e","target","value","previousPage","nextPage","handleSearchChange","filter","employee","firstname","toLowerCase","includes","lastname","dateOfBirth","startDate","street","city","state","zip","toString","department","createPaginationButtons","pageNumber","buttons","i","React","undefined","disablePreviousButton","disableNextButton","styles","controlsBar","table","map","column","th","accessor","Header","row","idx","tr","Object","values","cell","td","paginationContainer"],"mappings":"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"}