{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import React, { useState } from 'react'\n\nexport default function EmployeesTable({ data, columns }) {\n  const [currentPage, setCurrentPage] = useState(1)\n  const [entriesDisplayed, setEntriesDisplayed] = useState(10)\n  const [displayedData, setDisplayedData] = useState(data)\n  const totalEntries = displayedData.length\n  const totalPages = Math.ceil(totalEntries / entriesDisplayed)\n\n  const createDataChunks = (chunkSize) => {\n    const chunkList = []\n    const datas = displayedData.slice()\n    while (datas.length) {\n      chunkList.push(datas.splice(0, chunkSize))\n    }\n    return chunkList\n  }\n\n  const onEntriesDisplayedChange = (e) => {\n    setEntriesDisplayed(e.target.value)\n    setCurrentPage(1)\n  }\n\n  const previousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1)\n    }\n  }\n\n  const nextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1)\n    }\n  }\n\n  const handleSearchChange = (e) => {\n    const datas = data\n      .slice()\n      .filter((employee) =>\n        employee.firstname.toLowerCase().includes(e.target.value.toLowerCase())\n      )\n    setDisplayedData(datas)\n    setCurrentPage(1)\n  }\n\n  const handleHeaderClick = (e) => {\n    console.log(e.target.attributes.value.value)\n    // const datas = displayedData.slice().sort((a, b) => a.zip - b.zip)\n    // setDisplayedData(datas)\n  }\n\n  const disablePreviousButton =\n    totalPages <= 1 || currentPage <= 1 ? true : undefined\n  const disableNextButton =\n    totalPages <= 1 || currentPage >= totalPages ? true : undefined\n\n  const tableStyle = {\n    width: '890px'\n  }\n\n  const headerStyle = {\n    verticalAlign: 'middle'\n  }\n\n  return (\n    <div>\n      <div>\n        <select onChange={onEntriesDisplayedChange} value={entriesDisplayed}>\n          <option value={1}>1</option>\n          <option value={2}>2</option>\n          <option value={10}>10</option>\n          <option value={25}>25</option>\n          <option value={50}>50</option>\n          <option value={100}>100</option>\n        </select>\n      </div>\n      <input type='text' placeholder='Search' onChange={handleSearchChange} />\n      <table style={tableStyle}>\n        <thead style={headerStyle}>\n          <tr>\n            {columns.map((column) => (\n              <th\n                onClick={(e) => handleHeaderClick(e)}\n                key={column.accessor}\n                value={column.accessor}\n              >\n                {column.Header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {displayedData.length > 0 ? (\n            createDataChunks(entriesDisplayed)[currentPage - 1].map(\n              (row, idx) => (\n                <tr key={idx}>\n                  {Object.values(row).map((cell, idx) => (\n                    <td key={idx}>{cell}</td>\n                  ))}\n                </tr>\n              )\n            )\n          ) : (\n            <tr>\n              <td>No matching records found</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <div>\n        <button disabled={disablePreviousButton} onClick={previousPage}>\n          Previous\n        </button>\n        <button disabled={disableNextButton} onClick={nextPage}>\n          Next\n        </button>\n      </div>\n      <div>{`Showing ${currentPage} of ${totalPages} (${totalEntries} entries)`}</div>\n    </div>\n  )\n}\n"],"names":["EmployeesTable","data","columns","useState","currentPage","setCurrentPage","entriesDisplayed","setEntriesDisplayed","displayedData","setDisplayedData","totalEntries","length","totalPages","Math","ceil","createDataChunks","chunkSize","chunkList","datas","slice","push","splice","onEntriesDisplayedChange","e","target","value","previousPage","nextPage","handleSearchChange","filter","employee","firstname","toLowerCase","includes","handleHeaderClick","console","log","attributes","disablePreviousButton","undefined","disableNextButton","tableStyle","width","headerStyle","verticalAlign","React","map","column","accessor","Header","row","idx","Object","values","cell"],"mappings":"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"}