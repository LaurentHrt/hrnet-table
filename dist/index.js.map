{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import React, { useState } from 'react'\nimport styles from './styles.module.css'\n\nexport default function EmployeesTable({ data, columns }) {\n  const [currentPage, setCurrentPage] = useState(1)\n  const [entriesDisplayed, setEntriesDisplayed] = useState(10)\n  const [displayedData, setDisplayedData] = useState(data)\n  const [sort, setSort] = useState('')\n  const [sortType, setSortType] = useState('')\n  const totalEntries = displayedData.length\n  const totalPages = Math.ceil(totalEntries / entriesDisplayed)\n  const showingFirst = currentPage * entriesDisplayed - entriesDisplayed + 1\n  const showingLast =\n    showingFirst + parseInt(entriesDisplayed - 1) > totalEntries\n      ? totalEntries\n      : showingFirst + parseInt(entriesDisplayed - 1)\n\n  const createDataChunks = (chunkSize) => {\n    const chunkList = []\n    const datas = displayedData.slice()\n    while (datas.length) {\n      chunkList.push(datas.splice(0, chunkSize))\n    }\n    return chunkList\n  }\n\n  const onEntriesDisplayedChange = (e) => {\n    setEntriesDisplayed(e.target.value)\n    setCurrentPage(1)\n  }\n\n  const onClickHeader = (e, column) => {\n    setCurrentPage(1)\n\n    if (sort === column) {\n      if (sortType === '') {\n        setDisplayedData(\n          displayedData.slice().sort((a, b) => {\n            if (a[column] > b[column]) return 1\n            else return -1\n          })\n        )\n        setSortType('DESC')\n        return\n      } else if (sortType === 'DESC') {\n        setDisplayedData(displayedData.slice().reverse())\n        setSortType('ASC')\n        return\n      } else {\n        setDisplayedData(data)\n        setSortType('')\n        setSort('')\n        return\n      }\n    } else {\n      setDisplayedData(\n        displayedData.slice().sort((a, b) => {\n          if (a[column] > b[column]) return 1\n          else return -1\n        })\n      )\n      setSortType('DESC')\n    }\n\n    setSort(column)\n  }\n\n  const previousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1)\n    }\n  }\n\n  const nextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1)\n    }\n  }\n\n  console.log(sort)\n  console.log(sortType)\n\n  const handleSearchChange = (e) => {\n    const datas = data\n      .slice()\n      .filter(\n        (employee) =>\n          employee.firstname\n            .toLowerCase()\n            .includes(e.target.value.toLowerCase()) ||\n          employee.lastname\n            .toLowerCase()\n            .includes(e.target.value.toLowerCase()) ||\n          employee.dateOfBirth\n            .toLowerCase()\n            .includes(e.target.value.toLowerCase()) ||\n          employee.startDate\n            .toLowerCase()\n            .includes(e.target.value.toLowerCase()) ||\n          employee.street\n            .toLowerCase()\n            .includes(e.target.value.toLowerCase()) ||\n          employee.city.toLowerCase().includes(e.target.value.toLowerCase()) ||\n          employee.state.toLowerCase().includes(e.target.value.toLowerCase()) ||\n          employee.zip\n            .toString()\n            .toLowerCase()\n            .includes(e.target.value.toLowerCase()) ||\n          employee.department\n            .toLowerCase()\n            .includes(e.target.value.toLowerCase())\n      )\n    setDisplayedData(datas)\n    setCurrentPage(1)\n  }\n\n  const createPaginationButtons = (pageNumber) => {\n    const buttons = []\n    for (let i = 1; i <= totalPages; i++) {\n      buttons.push(\n        <button\n          disabled={currentPage === i ? true : undefined}\n          onClick={() => setCurrentPage(i)}\n          key={i}\n        >\n          {i}\n        </button>\n      )\n    }\n    return buttons\n  }\n\n  const disablePreviousButton =\n    totalPages <= 1 || currentPage <= 1 ? true : undefined\n  const disableNextButton =\n    totalPages <= 1 || currentPage >= totalPages ? true : undefined\n\n  return (\n    <div>\n      <div className={styles.controlsBar}>\n        <div>\n          <label>\n            Show\n            <select\n              onChange={onEntriesDisplayedChange}\n              value={entriesDisplayed}\n            >\n              <option value={1}>1</option>\n              <option value={2}>2</option>\n              <option value={10}>10</option>\n              <option value={25}>25</option>\n              <option value={50}>50</option>\n              <option value={100}>100</option>\n            </select>\n            entries\n          </label>\n        </div>\n        <div>\n          <label>\n            Search:\n            <input\n              type='text'\n              placeholder='Search'\n              onChange={handleSearchChange}\n            />\n          </label>\n        </div>\n      </div>\n      <table className={styles.table}>\n        <thead>\n          <tr>\n            {columns.map((column) => (\n              <th\n                className={styles.th}\n                key={column.accessor}\n                value={column.accessor}\n                onClick={(e, value) => onClickHeader(e, column.accessor)}\n              >\n                {column.Header}\n                {sort !== column.accessor && (\n                  <span className={styles.arrow}>↕</span>\n                )}\n                {sort === column.accessor && sortType === 'ASC' && (\n                  <span className={styles.arrow}>↑</span>\n                )}\n                {sort === column.accessor && sortType === 'DESC' && (\n                  <span className={styles.arrow}>↓</span>\n                )}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {displayedData.length > 0 ? (\n            createDataChunks(entriesDisplayed)[currentPage - 1].map(\n              (row, idx) => (\n                <tr className={styles.tr} key={idx}>\n                  {Object.values(row).map((cell, idx) => (\n                    <td className={styles.td} key={idx}>\n                      {cell}\n                    </td>\n                  ))}\n                </tr>\n              )\n            )\n          ) : (\n            <tr>\n              <td>No matching records found</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <div className={styles.paginationContainer}>\n        <div>{`Showing ${showingFirst} to ${showingLast} of ${totalEntries} entries`}</div>\n        <div>\n          <button disabled={disablePreviousButton} onClick={previousPage}>\n            Previous\n          </button>\n          {createPaginationButtons(totalPages)}\n          <button disabled={disableNextButton} onClick={nextPage}>\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":["EmployeesTable","data","columns","useState","currentPage","setCurrentPage","entriesDisplayed","setEntriesDisplayed","displayedData","setDisplayedData","sort","setSort","sortType","setSortType","totalEntries","length","totalPages","Math","ceil","showingFirst","showingLast","parseInt","createDataChunks","chunkSize","chunkList","datas","slice","push","splice","onEntriesDisplayedChange","e","target","value","onClickHeader","column","a","b","reverse","previousPage","nextPage","console","log","handleSearchChange","filter","employee","firstname","toLowerCase","includes","lastname","dateOfBirth","startDate","street","city","state","zip","toString","department","createPaginationButtons","pageNumber","buttons","i","React","undefined","disablePreviousButton","disableNextButton","styles","controlsBar","table","map","th","accessor","Header","arrow","row","idx","tr","Object","values","cell","td","paginationContainer"],"mappings":"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"}